/// First 512 bytes for the emulator.
pub const EMULATOR_ROM: [uint8; 0x200] = [
    // 4x5 low-res mode font sprites (0-F)
    0xF0, 0x90, 0x90, 0x90, 0xF0, 0x20, 0x60, 0x20,
    0x20, 0x70, 0xF0, 0x10, 0xF0, 0x80, 0xF0, 0xF0,
    0x10, 0xF0, 0x10, 0xF0, 0xA0, 0xA0, 0xF0, 0x20,
    0x20, 0xF0, 0x80, 0xF0, 0x10, 0xF0, 0xF0, 0x80,
    0xF0, 0x90, 0xF0, 0xF0, 0x10, 0x20, 0x40, 0x40,
    0xF0, 0x90, 0xF0, 0x90, 0xF0, 0xF0, 0x90, 0xF0,
    0x10, 0xF0, 0xF0, 0x90, 0xF0, 0x90, 0x90, 0xE0,
    0x90, 0xE0, 0x90, 0xE0, 0xF0, 0x80, 0x80, 0x80,
    0xF0, 0xE0, 0x90, 0x90, 0x90, 0xE0, 0xF0, 0x80,
    0xF0, 0x80, 0xF0, 0xF0, 0x80, 0xF0, 0x80, 0x80,

    // 8x10 high-res mode font sprites (0-F)
    0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7,
    0x7E, 0x3C, 0x18, 0x38, 0x58, 0x18, 0x18, 0x18,
    0x18, 0x18, 0x18, 0x3C, 0x3E, 0x7F, 0xC3, 0x06,
    0x0C, 0x18, 0x30, 0x60, 0xFF, 0xFF, 0x3C, 0x7E,
    0xC3, 0x03, 0x0E, 0x0E, 0x03, 0xC3, 0x7E, 0x3C,
    0x06, 0x0E, 0x1E, 0x36, 0x66, 0xC6, 0xFF, 0xFF,
    0x06, 0x06, 0xFF, 0xFF, 0xC0, 0xC0, 0xFC, 0xFE,
    0x03, 0xC3, 0x7E, 0x3C, 0x3E, 0x7C, 0xC0, 0xC0,
    0xFC, 0xFE, 0xC3, 0xC3, 0x7E, 0x3C, 0xFF, 0xFF,
    0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x60, 0x60,
    0x3C, 0x7E, 0xC3, 0xC3, 0x7E, 0x7E, 0xC3, 0xC3,
    0x7E, 0x3C, 0x3C, 0x7E, 0xC3, 0xC3, 0x7F, 0x3F,
    0x03, 0x03, 0x3E, 0x7C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

    // 6-bit ASCII character patterns
    0x00, // |        |
    0x10, // |   *    |
    0x20, // |  *     |
    0x88, // |*   *   |
    0xA8, // |* * *   |
    0x50, // | * *    |
    0xF8, // |*****   |
    0x70, // | ***    |
    0x80, // |*       |
    0x90, // |*  *    |
    0xA0, // |* *     |
    0xB0, // |* **    |
    0xC0, // |**      |
    0xD0, // |** *    |
    0xE0, // |***     |
    0xF0, // |****    |

    // 6-bit ASCII characters from 0x100-
    0x46, 0x3E, 0x56, // @
    0x99, 0x9F, 0x4F, // A
    0x5F, 0x57, 0x4F, // B
    0x8F, 0x88, 0x4F, // C
    0x5F, 0x55, 0x4F, // D
    0x8F, 0x8F, 0x4F, // E
    0x88, 0x8F, 0x4F, // F
    0x9F, 0x8B, 0x4F, // G
    0x99, 0x9F, 0x49, // H
    0x27, 0x22, 0x47, // I
    0xAE, 0x22, 0x47, // J
    0xA9, 0xAC, 0x49, // K
    0x8F, 0x88, 0x48, // L
    0x43, 0x64, 0x53, // M
    0x99, 0xDB, 0x49, // N
    0x9F, 0x99, 0x4F, // O
    0x88, 0x9F, 0x4F, // P
    0x9F, 0x9B, 0x4F, // Q
    0xA9, 0x9F, 0x4F, // R
    0x1F, 0x8F, 0x4F, // S
    0x22, 0x22, 0x56, // T
    0x9F, 0x99, 0x49, // U
    0x22, 0x55, 0x53, // V
    0x55, 0x44, 0x54, // W
    0x53, 0x52, 0x53, // X
    0x22, 0x52, 0x53, // Y
    0xCF, 0x12, 0x4F, // Z
    0x8C, 0x88, 0x3C, // [
    0x10, 0xC2, 0x40, // \
    0x2E, 0x22, 0x3E, // ]
    0x30, 0x25, 0x50, // ^
    0x06, 0x00, 0x50, // _
    0x00, 0x00, 0x40, // space
    0x0C, 0xCC, 0x2C, // !
    0x00, 0x50, 0x45, // "
    0x65, 0x65, 0x55, // #
    0x46, 0x46, 0x56, // $
    0xDF, 0xBF, 0x4F, // %
    0x5F, 0xAF, 0x4E, // &
    0x00, 0x80, 0x18, // '
    0x21, 0x22, 0x41, // (
    0x12, 0x11, 0x42, // )
    0x53, 0x56, 0x53, // *
    0x22, 0x26, 0x52, // +
    0x2E, 0x00, 0x30, // ,
    0x00, 0x06, 0x50, // -
    0xCC, 0x00, 0x20, // .
    0xC0, 0x12, 0x40, // /
    0x9F, 0x99, 0x4F, // 0
    0x22, 0x22, 0x32, // 1
    0x8F, 0x1F, 0x4F, // 2
    0x1F, 0x1F, 0x4F, // 3
    0x22, 0xAF, 0x4A, // 4
    0x1F, 0x8F, 0x4F, // 5
    0x9F, 0x8F, 0x4F, // 6
    0x11, 0x11, 0x4F, // 7
    0x9F, 0x9F, 0x4F, // 8
    0x1F, 0x9F, 0x4F, // 9
    0x80, 0x80, 0x10, // :
    0x2E, 0x20, 0x30, // ;
    0x21, 0x2C, 0x41, // <
    0xE0, 0xE0, 0x30, // =
    0x2C, 0x21, 0x4C, // >
    0x88, 0x1F, 0x4F, // ?

    // Extra scratch memory in the ROM, used for ASCII sprites.
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    }

    // A "dummy" program that does nothing but loop in on itself.
    var Dummy = []byte{0x12, 0x00}

    // Boot is a CHIP-8 program that can be loaded in case nothing is.
    var Boot = []byte{
    0xA2, 0x5B, 0x60, 0x0B, 0x61, 0x03, 0x62, 0x07,
    0xD0, 0x17, 0x70, 0x07, 0xF2, 0x1E, 0xD0, 0x17,
    0x70, 0x07, 0xF2, 0x1E, 0xD0, 0x17, 0x70, 0x07,
    0xF2, 0x1E, 0xD0, 0x17, 0x70, 0x07, 0xF2, 0x1E,
    0xD0, 0x17, 0x70, 0x05, 0xF2, 0x1E, 0xD0, 0x17,
    0xF2, 0x1E, 0xA2, 0x5A, 0xC0, 0x3F, 0xC1, 0x1F,
    0x62, 0x01, 0x63, 0x01, 0xD0, 0x11, 0x64, 0x02,
    0xF4, 0x15, 0xF4, 0x07, 0x34, 0x00, 0x12, 0x3A,
    0xD0, 0x11, 0x80, 0x24, 0x81, 0x34, 0xD0, 0x11,
    0x41, 0x00, 0x63, 0x01, 0x41, 0x1F, 0x63, 0xFF,
    0x40, 0x00, 0x62, 0x01, 0x40, 0x3F, 0x62, 0xFF,
    0x12, 0x36, 0x80, 0x78, 0xCC, 0xC0, 0xC0, 0xC0,
    0xCC, 0x78, 0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC,
    0xCC, 0xFC, 0x30, 0x30, 0x30, 0x30, 0x30, 0xFC,
    0xF8, 0xCC, 0xCC, 0xF8, 0xC0, 0xC0, 0xC0, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x78, 0xCC,
    0xCC, 0x78, 0xCC, 0xCC, 0x78,
    }

    // This is a CDP1802 interpreter for CHIP-8. It does NOT support CHIP-8E!
    var Interpreter = []byte{
    0x91, 0xBB, 0xFF, 0x01, 0xB2, 0xB6, 0xF8, 0xCF,
    0xA2, 0xF8, 0x81, 0xB1, 0xF8, 0x46, 0xA1, 0x90,
    0xB4, 0xF8, 0x1B, 0xA4, 0xF8, 0x01, 0xB5, 0xF8,
    0xFC, 0xA5, 0xD4, 0x96, 0xB7, 0xE2, 0x94, 0xBC,
    0x45, 0xAF, 0xF6, 0xF6, 0xF6, 0xF6, 0x32, 0x44,
    0xF9, 0x50, 0xAC, 0x8F, 0xFA, 0x0F, 0xF9, 0xF0,
    0xA6, 0x05, 0xF6, 0xF6, 0xF6, 0xF6, 0xF9, 0xF0,
    0xA7, 0x4C, 0xB3, 0x8C, 0xFC, 0x0F, 0xAC, 0x0C,
    0xA3, 0xD3, 0x30, 0x1B, 0x8F, 0xFA, 0x0F, 0xB3,
    0x45, 0x30, 0x40, 0x22, 0x69, 0x12, 0xD4, 0x00,
    0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
    0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x01, 0x01,
    0x00, 0x7C, 0x75, 0x83, 0x88, 0x95, 0xB4, 0x87,
    0xBC, 0x91, 0xEB, 0xA4, 0xD9, 0x70, 0x99, 0x05,
    0x06, 0xFA, 0x07, 0xBE, 0x06, 0xFA, 0x3F, 0xF6,
    0xF6, 0xF6, 0x22, 0x52, 0x07, 0xFA, 0x1F, 0xFE,
    0xFE, 0xFE, 0xF1, 0xAC, 0x9B, 0xBC, 0x45, 0xFA,
    0x0F, 0xAD, 0xA7, 0xF8, 0xD0, 0xA6, 0x93, 0xAF,
    0x87, 0x32, 0xF3, 0x27, 0x4A, 0xBD, 0x9E, 0xAE,
    0x8E, 0x32, 0xA4, 0x9D, 0xF6, 0xBD, 0x8F, 0x76,
    0xAF, 0x2E, 0x30, 0x98, 0x9D, 0x56, 0x16, 0x8F,
    0x56, 0x16, 0x30, 0x8E, 0x00, 0xEC, 0xF8, 0xD0,
    0xA6, 0x93, 0xA7, 0x8D, 0x32, 0xD9, 0x06, 0xF2,
    0x2D, 0x32, 0xBE, 0xF8, 0x01, 0xA7, 0x46, 0xF3,
    0x5C, 0x02, 0xFB, 0x07, 0x32, 0xD2, 0x1C, 0x06,
    0xF2, 0x32, 0xCE, 0xF8, 0x01, 0xA7, 0x06, 0xF3,
    0x5C, 0x2C, 0x16, 0x8C, 0xFC, 0x08, 0xAC, 0x3B,
    0xB3, 0xF8, 0xFF, 0xA6, 0x87, 0x56, 0x12, 0xD4,
    0x9B, 0xBF, 0xF8, 0xFF, 0xAF, 0x93, 0x5F, 0x8F,
    0x32, 0xDF, 0x2F, 0x30, 0xE5, 0x00, 0x42, 0xB5,
    0x42, 0xA5, 0xD4, 0x8D, 0xA7, 0x87, 0x32, 0xAC,
    0x2A, 0x27, 0x30, 0xF5, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0xA3, 0x98,
    0x56, 0xD4, 0xF8, 0x81, 0xBC, 0xF8, 0x95, 0xAC,
    0x22, 0xDC, 0x12, 0x56, 0xD4, 0x06, 0xB8, 0xD4,
    0x06, 0xA8, 0xD4, 0x64, 0x0A, 0x01, 0xE6, 0x8A,
    0xF4, 0xAA, 0x3B, 0x28, 0x9A, 0xFC, 0x01, 0xBA,
    0xD4, 0xF8, 0x81, 0xBA, 0x06, 0xFA, 0x0F, 0xAA,
    0x0A, 0xAA, 0xD4, 0xE6, 0x06, 0xBF, 0x93, 0xBE,
    0xF8, 0x1B, 0xAE, 0x2A, 0x1A, 0xF8, 0x00, 0x5A,
    0x0E, 0xF5, 0x3B, 0x48, 0x56, 0x0A, 0xFC, 0x01,
    0x5A, 0x30, 0x40, 0x4E, 0xF6, 0x3B, 0x3C, 0x9F,
    0x56, 0x2A, 0x2A, 0xD4, 0x00, 0x22, 0x86, 0x52,
    0xF8, 0xF0, 0xA7, 0x07, 0x5A, 0x87, 0xF3, 0x17,
    0x1A, 0x3A, 0x5B, 0x12, 0xD4, 0x22, 0x86, 0x52,
    0xF8, 0xF0, 0xA7, 0x0A, 0x57, 0x87, 0xF3, 0x17,
    0x1A, 0x3A, 0x6B, 0x12, 0xD4, 0x15, 0x85, 0x22,
    0x73, 0x95, 0x52, 0x25, 0x45, 0xA5, 0x86, 0xFA,
    0x0F, 0xB5, 0xD4, 0x45, 0xE6, 0xF3, 0x3A, 0x82,
    0x15, 0x15, 0xD4, 0x45, 0xE6, 0xF3, 0x3A, 0x88,
    0xD4, 0x45, 0x07, 0x30, 0x8C, 0x45, 0x07, 0x30,
    0x84, 0xE6, 0x62, 0x26, 0x45, 0xA3, 0x36, 0x88,
    0xD4, 0x3E, 0x88, 0xD4, 0xF8, 0xF0, 0xA7, 0xE7,
    0x45, 0xF4, 0xA5, 0x86, 0xFA, 0x0F, 0x3B, 0xB2,
    0xFC, 0x01, 0xB5, 0xD4, 0x45, 0x56, 0xD4, 0x45,
    0xE6, 0xF4, 0x56, 0xD4, 0x45, 0xFA, 0x0F, 0x3A,
    0xC4, 0x07, 0x56, 0xD4, 0xAF, 0x22, 0xF8, 0xD3,
    0x73, 0x8F, 0xF9, 0xF0, 0x52, 0xE6, 0x07, 0xD2,
    0x56, 0xF8, 0xFF, 0xA6, 0xF8, 0x00, 0x7E, 0x56,
    0xD4, 0x19, 0x89, 0xAE, 0x93, 0xBE, 0x99, 0xEE,
    0xF4, 0x56, 0x76, 0xE6, 0xF4, 0xB9, 0x56, 0x45,
    0xF2, 0x56, 0xD4, 0x45, 0xAA, 0x86, 0xFA, 0x0F,
    0xBA, 0xD4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x4B
]